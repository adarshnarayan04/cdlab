Grammar

    0 $accept: S $end

    1 S: ID '=' E ';'

    2 E: E LOGAND F
    3  | F

    4 F: F '-' G
    5  | G

    6 G: G '%' H
    7  | H

    8 H: '!' H
    9  | I

   10 I: '(' E ')'
   11  | ID
   12  | NUM


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 8
    '%' (37) 6
    '(' (40) 10
    ')' (41) 10
    '-' (45) 4
    ';' (59) 1
    '=' (61) 1
    error (256)
    NUM <val> (258) 12
    ID <name> (259) 1 11
    LOGAND (260) 2


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    S <name> (14)
        on left: 1
        on right: 0
    E <name> (15)
        on left: 2 3
        on right: 1 2 10
    F <name> (16)
        on left: 4 5
        on right: 2 3 4
    G <name> (17)
        on left: 6 7
        on right: 4 5 6
    H <name> (18)
        on left: 8 9
        on right: 6 7 8
    I <name> (19)
        on left: 10 11 12
        on right: 9


State 0

    0 $accept: • S $end

    ID  shift, and go to state 1

    S  go to state 2


State 1

    1 S: ID • '=' E ';'

    '='  shift, and go to state 3


State 2

    0 $accept: S • $end

    $end  shift, and go to state 4


State 3

    1 S: ID '=' • E ';'

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    E  go to state 9
    F  go to state 10
    G  go to state 11
    H  go to state 12
    I  go to state 13


State 4

    0 $accept: S $end •

    $default  accept


State 5

   12 I: NUM •

    $default  reduce using rule 12 (I)


State 6

   11 I: ID •

    $default  reduce using rule 11 (I)


State 7

    8 H: '!' • H

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    H  go to state 14
    I  go to state 13


State 8

   10 I: '(' • E ')'

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    E  go to state 15
    F  go to state 10
    G  go to state 11
    H  go to state 12
    I  go to state 13


State 9

    1 S: ID '=' E • ';'
    2 E: E • LOGAND F

    LOGAND  shift, and go to state 16
    ';'     shift, and go to state 17


State 10

    3 E: F •
    4 F: F • '-' G

    '-'  shift, and go to state 18

    $default  reduce using rule 3 (E)


State 11

    5 F: G •
    6 G: G • '%' H

    '%'  shift, and go to state 19

    $default  reduce using rule 5 (F)


State 12

    7 G: H •

    $default  reduce using rule 7 (G)


State 13

    9 H: I •

    $default  reduce using rule 9 (H)


State 14

    8 H: '!' H •

    $default  reduce using rule 8 (H)


State 15

    2 E: E • LOGAND F
   10 I: '(' E • ')'

    LOGAND  shift, and go to state 16
    ')'     shift, and go to state 20


State 16

    2 E: E LOGAND • F

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    F  go to state 21
    G  go to state 11
    H  go to state 12
    I  go to state 13


State 17

    1 S: ID '=' E ';' •

    $default  reduce using rule 1 (S)


State 18

    4 F: F '-' • G

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    G  go to state 22
    H  go to state 12
    I  go to state 13


State 19

    6 G: G '%' • H

    NUM  shift, and go to state 5
    ID   shift, and go to state 6
    '!'  shift, and go to state 7
    '('  shift, and go to state 8

    H  go to state 23
    I  go to state 13


State 20

   10 I: '(' E ')' •

    $default  reduce using rule 10 (I)


State 21

    2 E: E LOGAND F •
    4 F: F • '-' G

    '-'  shift, and go to state 18

    $default  reduce using rule 2 (E)


State 22

    4 F: F '-' G •
    6 G: G • '%' H

    '%'  shift, and go to state 19

    $default  reduce using rule 4 (F)


State 23

    6 G: G '%' H •

    $default  reduce using rule 6 (G)
